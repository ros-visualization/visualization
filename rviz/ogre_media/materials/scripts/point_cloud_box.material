material rviz/PointCloudBox
{ 
  // the 'gp' techniques need one input vertex per box 
  // and use geometry shaders to create the geometry
  
  technique gp
  {
    gpu_vendor_rule exclude ati
    pass
    {
      vertex_program_ref   rviz/pass_pos_color.vert {}
      geometry_program_ref rviz/box.geom(with_lighting) {}
      fragment_program_ref rviz/smooth_square.frag {}
    }
  }
  
  technique gp_depth
  {
    gpu_vendor_rule exclude ati
    scheme Depth
    pass
    {
      vertex_program_ref   rviz/pass_pos_color.vert {}
      geometry_program_ref rviz/box.geom(with_depth) {}
      fragment_program_ref rviz/depth.frag {}
    }
  }
  
  technique gp_selection_first_pass
  {
    gpu_vendor_rule exclude ati
    scheme Pick
    pass
    {
      vertex_program_ref   rviz/pass_pos_color.vert {}
      geometry_program_ref rviz/box.geom {}
      fragment_program_ref rviz/pickcolor.frag {}
    }
  }
  
  technique gp_selection_second_pass
  {
    gpu_vendor_rule exclude ati
    scheme Pick1
    
    pass
    {
      vertex_program_ref   rviz/box.vert {}
      geometry_program_ref rviz/box.geom {}
      fragment_program_ref rviz/pass_color.frag {}
    }
  }
  
  /* the 'nogp' techniques require the full box geometry as input */
  
  technique nogp
  {
    pass
    {
      vertex_program_ref rviz/box.vert {}
      fragment_program_ref rviz/smooth_square.frag {}
    }
  } 
  
  technique nogp_depth
  {
    scheme Depth
    pass
    {
      vertex_program_ref rviz/box.vert(with_depth) {}
      fragment_program_ref rviz/depth.frag {}
    }
  } 
  
  technique nogp_selection_first_pass
  {
    scheme Pick
    pass
    {
      vertex_program_ref rviz/box.vert {}
      fragment_program_ref rviz/pickcolor.frag {}
    }
  }
  
  technique nogp_selection_second_pass
  {
    scheme Pick1
    pass
    {
      vertex_program_ref rviz/box.vert {}
      fragment_program_ref rviz/pass_color.frag {}
    }
  }
}
