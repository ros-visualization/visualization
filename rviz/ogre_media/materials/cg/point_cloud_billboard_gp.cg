float4 transform(float4x4 worldviewproj, half3 at, half3 right, half3 up, half4 size, half2 dim, half4 pos)
{
  half4 s = half4(dim, 0.0, 0.0) * size;
  return mul(worldviewproj, pos + half4( (s.xxx * right) + (s.yyy * up), 0.0 ));
}

void emitBillboardVertices(float4 pos, float4 color, float4x4 worldviewproj, float4 camera_pos, float4 size)
{
  half3 at = camera_pos.xyz - pos.xyz;
  at = normalize(at);
  half3 right = cross(half3( 0.0, 1.0, 0.0 ), at);
  half3 up = cross(at, right);
  right = normalize(right);
  up = normalize(up);
  
  float2 tex0 = float2(-0.5, 0.5);
  float2 tex1 = float2(0.5, 0.5);
  float2 tex2 = float2(-0.5, -0.5);
  float2 tex3 = float2(0.5, -0.5);
  float4 tl = transform(worldviewproj, at, right, up, size, tex0, pos);
  float4 tr = transform(worldviewproj, at, right, up, size, tex1, pos);
  float4 bl = transform(worldviewproj, at, right, up, size, tex2, pos);
  float4 br = transform(worldviewproj, at, right, up, size, tex3, pos);

  emitVertex(tl : POSITION, color : COLOR, tex0 : TEXCOORD0);
  emitVertex(bl : POSITION, color : COLOR, tex1 : TEXCOORD0);
  emitVertex(tr : POSITION, color : COLOR, tex2 : TEXCOORD0);
  emitVertex(br : POSITION, color : COLOR, tex3 : TEXCOORD0);

  restartStrip();
}

void emitBillboardSphereVertices(float4 pos, float4 color, float4x4 worldviewproj, float4 camera_pos, float4 size)
{
  emitBillboardVertices(pos, color, worldviewproj, camera_pos, size);
}

POINT TRIANGLE_OUT void pointCloudBillboardGP_main(AttribArray<float4> position : POSITION, 
                                                AttribArray<float4> color : COLOR, 
                                                
                                                uniform float4x4 worldviewproj,
                                                uniform float4 camera_pos,
                                                uniform float4 size)
{ 
  emitBillboardVertices(position[0], color[0], worldviewproj, camera_pos, size);
}

POINT TRIANGLE_OUT void pointCloudBillboardGP_Selection_main(AttribArray<float4> position : POSITION, 
                                                              AttribArray<float4> color : COLOR,
                                                              
                                                              uniform float4x4 worldviewproj,
                                                              uniform float4 camera_pos,
                                                              uniform float4 size,
                                                              uniform float4 pick_color)
{
  emitBillboardVertices(position[0], pick_color, worldviewproj, camera_pos, size);
}

POINT TRIANGLE_OUT void pointCloudBillboardSphereGP_main(AttribArray<float4> position : POSITION, 
                                                AttribArray<float4> color : COLOR, 
                                                
                                                uniform float4x4 worldviewproj,
                                                uniform float4 camera_pos,
                                                uniform float4 size)
{ 
  emitBillboardSphereVertices(position[0], color[0], worldviewproj, camera_pos, size);
}

POINT TRIANGLE_OUT void pointCloudBillboardSphereGP_Selection_main(AttribArray<float4> position : POSITION, 
                                                              AttribArray<float4> color : COLOR,
                                                              
                                                              uniform float4x4 worldviewproj,
                                                              uniform float4 camera_pos,
                                                              uniform float4 size,
                                                              uniform float4 pick_color)
{
  emitBillboardSphereVertices(position[0], pick_color, worldviewproj, camera_pos, size);
}